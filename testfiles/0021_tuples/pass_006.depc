/*
 * Copyright Raffaele Rossi 2025.
 *
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at https://www.boost.org/LICENSE_1_0.txt)
 */

func copy_0(array_t((u64_t n, array_t(i32_t, n)), 0) x) -> array_t((u64_t n, array_t(i32_t, n)), 0)
{
    // this is a no-op because the array is empty
    return x;
}

func copy_1(array_t((u64_t n, array_t(i32_t, n)), 1) x) -> array_t((u64_t n, array_t(i32_t, n)), 1)
{
    // the array-of-vector is not trivially copyable,
    // so should malloc the memory the single element
    return x;
}

func copy_k(u64_t k, array_t((u64_t n, array_t(i32_t, n)), k) x) -> array_t((u64_t n, array_t(i32_t, n)), k)
{
    // the k arrays-of-vector are not trivially copyable,
    // so should malloc the memory and copy each element
    return x;
}
