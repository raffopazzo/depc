typedef int = signed 32 bit integer from ... to ...;

auto id(typename t, t x) -> t
{
    return x;
}

i32_t f(i32_t x)
{
    return id(i32_t, x);
}

u32_t g(u32_t x)
{
    return id(u32_t, x);
}

int h(int x)
{
    return id(int, x);
}

i32_t foo()
{
    return f(-1);
}

u32_t bar()
{
    return g(1);
}

int baz()
{
    return h(-1);
}

auto apply(
    typename t,
    (t) -> t f,
    t x
) -> t
{
    return f(x);
}

i32_t apply_f()
{
    return apply(i32_t, f, -1);
}

u32_t apply_g()
{
    return apply(u32_t, g, 1);
}

int apply_h()
{
    return apply(int, h, 1);
}
